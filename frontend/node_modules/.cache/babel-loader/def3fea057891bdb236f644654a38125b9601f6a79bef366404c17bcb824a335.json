{"ast":null,"code":"import React,{useEffect,useRef}from'react';import Chart from'chart.js/auto';import'./IPOTrendsChart.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IPOTrendsChart=()=>{const chartRef=useRef(null);const chartInstance=useRef(null);useEffect(()=>{const ctx=chartRef.current.getContext('2d');if(chartInstance.current){chartInstance.current.destroy();}chartInstance.current=new Chart(ctx,{type:'bar',data:{labels:[],datasets:[{label:'Number of IPOs',data:[],backgroundColor:'rgba(63,81,181,0.7)',borderColor:'rgba(63,81,181,1)',borderWidth:1,borderRadius:4}]},options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},title:{display:true,text:'Monthly IPO Count',font:{size:16,weight:'bold'},padding:{top:10,bottom:20}}},scales:{y:{beginAtZero:true,grid:{color:'rgba(0,0,0,0.1)'}},x:{grid:{display:false}}}}});const updateChart=async()=>{try{const response=await fetch('/api/chart-data/');if(!response.ok){throw new Error('Failed to fetch chart data');}const data=await response.json();chartInstance.current.data.labels=data.labels;chartInstance.current.data.datasets[0].data=data.values;chartInstance.current.update();}catch(error){console.error('Error updating chart:',error);}};updateChart();const interval=setInterval(updateChart,10000);return()=>{clearInterval(interval);if(chartInstance.current){chartInstance.current.destroy();}};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"IPO Market Trends\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef,id:\"ipoChart\"})})]});};export default IPOTrendsChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsx","_jsx","jsxs","_jsxs","IPOTrendsChart","chartRef","chartInstance","ctx","current","getContext","destroy","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","title","text","font","size","weight","padding","top","bottom","scales","y","beginAtZero","grid","color","x","updateChart","response","fetch","ok","Error","json","values","update","error","console","interval","setInterval","clearInterval","className","children","ref","id"],"sources":["E:/Bluestock-IPO-Web-App/frontend/src/components/IPOTrendsChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport './IPOTrendsChart.css';\r\n\r\nconst IPOTrendsChart = () => {\r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: [],\r\n        datasets: [{\r\n          label: 'Number of IPOs',\r\n          data: [],\r\n          backgroundColor: 'rgba(63,81,181,0.7)',\r\n          borderColor: 'rgba(63,81,181,1)',\r\n          borderWidth: 1,\r\n          borderRadius: 4,\r\n        }],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: 'Monthly IPO Count',\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold',\r\n            },\r\n            padding: {\r\n              top: 10,\r\n              bottom: 20,\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            grid: {\r\n              color: 'rgba(0,0,0,0.1)',\r\n            },\r\n          },\r\n          x: {\r\n            grid: {\r\n              display: false,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    const updateChart = async () => {\r\n      try {\r\n        const response = await fetch('/api/chart-data/');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch chart data');\r\n        }\r\n        const data = await response.json();\r\n        chartInstance.current.data.labels = data.labels;\r\n        chartInstance.current.data.datasets[0].data = data.values;\r\n        chartInstance.current.update();\r\n      } catch (error) {\r\n        console.error('Error updating chart:', error);\r\n      }\r\n    };\r\n\r\n    updateChart();\r\n    const interval = setInterval(updateChart, 10000); \r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chart-section\">\r\n      <h3>IPO Market Trends</h3>\r\n      <div className=\"chart-container\">\r\n        <canvas ref={chartRef} id=\"ipoChart\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IPOTrendsChart; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}